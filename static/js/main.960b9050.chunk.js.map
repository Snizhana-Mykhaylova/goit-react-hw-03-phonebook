{"version":3,"sources":["Components/Filter/filter.module.css","Components/Form/form.module.css","Components/Form/Form.js","Components/Contacts/Contacts.js","Components/Filter/Filter.js","App.js","index.js","Components/Contacts/contacts.module.css"],"names":["module","exports","Form","state","name","number","handleChange","event","setState","target","value","handleSubmit","preventDefault","props","onSubmit","formReset","this","className","styles","form","input","type","pattern","title","required","onChange","button","Component","phoneFormatter","require","Contacts","contacts","onDeleteContact","map","contact","contactItem","format","onClick","id","Filter","defaultProps","App","filter","formSubmitHandler","contactName","ContactNumber","uuidv4","normalizedName","toLowerCase","find","alert","prevState","filterChange","currentTarget","refreshContacts","localStorage","getItem","parsContacts","JSON","parse","prevProps","setItem","stringify","normalizedFilter","toLocaleLowerCase","filteredContacts","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,MAAQ,wB,uCCA1BD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,oBAAoB,OAAS,uB,sJC6DlEC,E,4MAzDbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAAAC,GACb,EAAKC,SAAL,eAAiBD,EAAME,OAAOL,KAAOG,EAAME,OAAOC,S,EAGpDC,aAAe,SAAAJ,GACbA,EAAMK,iBACN,IAAMP,EAAS,EAAKF,MAAME,OAC1B,EAAKQ,MAAMC,SAAS,EAAKX,MAAMC,KAAMC,GAErC,EAAKU,a,EAGPA,UAAY,WACV,EAAKP,SAAS,CACZJ,KAAM,GACNC,OAAQ,M,4CAIZ,WACE,OACE,uBAAMS,SAAUE,KAAKL,aAAcM,UAAWC,IAAOC,KAArD,UACE,wBAAOF,UAAWC,IAAOE,MAAzB,iBAEE,uBACEV,MAAOM,KAAKb,MAAMC,KAClBiB,KAAK,OACLjB,KAAK,OACLkB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUT,KAAKV,kBAGnB,wBAAOW,UAAWC,IAAOE,MAAzB,mBAEE,uBACEV,MAAOM,KAAKb,MAAME,OAClBgB,KAAK,MACLjB,KAAK,SACLkB,QAAQ,+FACRC,MAAM,mlBACNC,UAAQ,EACRC,SAAUT,KAAKV,kBAGnB,wBAAQW,UAAWC,IAAOQ,OAA1B,gC,GApDWC,a,gBCDbC,EAAiBC,EAAQ,IAuBhBC,EArBE,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBAC5B,OACE,6BACGD,EAASE,KAAI,SAAAC,GAAO,OACnB,qBAAIjB,UAAWC,IAAOiB,YAAtB,UACGD,EAAQ9B,KADX,IAEE,sBAAMa,UAAWC,IAAOb,OAAxB,SACGuB,EAAeQ,OAAOF,EAAQ7B,OAAQ,eAEzC,wBACEY,UAAWC,IAAOQ,OAClBW,QAAS,kBAAML,EAAgBE,EAAQI,KAFzC,sBALsCJ,EAAQI,U,iBCNlDC,EAAS,SAAC,GAAD,IAAG7B,EAAH,EAAGA,MAAOe,EAAV,EAAUA,SAAV,OACb,0DAEE,uBACER,UAAWC,IAAOE,MAClBC,KAAK,OACLX,MAAOA,EACPe,SAAUA,QAKDc,IACfA,EAAOC,aAAe,CACpB9B,MAAO,I,UCiEM+B,E,4MAxEbtC,MAAQ,CACN4B,SAAU,GACVW,OAAQ,I,EAiBVC,kBAAoB,SAACC,EAAaC,GAChC,IAAMX,EAAU,CACd9B,KAAMwC,EACNN,GAAIQ,cACJzC,OAAQwC,GAGJE,EAAiBH,EAAYI,cAEjC,EAAK7C,MAAM4B,SAASkB,MAClB,SAAAf,GAAO,OAAIA,EAAQ9B,KAAK4C,gBAAkBD,KAG5CG,MAAM,GAAD,OAAIN,EAAJ,4BAGP,EAAKpC,UAAS,SAAA2C,GAAS,MAAK,CAC1BpB,SAAS,GAAD,mBAAMoB,EAAUpB,UAAhB,CAA0BG,S,EAItCkB,aAAe,SAAA7C,GACb,EAAKC,SAAS,CAAEkC,OAAQnC,EAAM8C,cAAc3C,S,EAG9CsB,gBAAkB,SAAAM,GAChB,IAAMgB,EAAkB,EAAKnD,MAAM4B,SAASW,QAC1C,SAAAR,GAAO,OAAIA,EAAQI,KAAOA,KAE5B,EAAK9B,SAAS,CAAEuB,SAAUuB,K,uDA3C5B,WACE,IAAMvB,EAAWwB,aAAaC,QAAQ,YAChCC,EAAeC,KAAKC,MAAM5B,GAC5B0B,GACFzC,KAAKR,SAAS,CAAEuB,SAAU0B,M,gCAI9B,SAAmBG,EAAWT,GACxBnC,KAAKb,MAAM4B,WAAaoB,EAAUpB,UACpCwB,aAAaM,QAAQ,WAAYH,KAAKI,UAAU9C,KAAKb,MAAM4B,a,oBAoC/D,WACE,IAAMgC,EAAmB/C,KAAKb,MAAMuC,OAAOsB,oBACrCC,EAAmBjD,KAAKb,MAAM4B,SAASW,QAAO,SAAAR,GAAO,OACzDA,EAAQ9B,KAAK4D,oBAAoBE,SAASH,MAG5C,OACE,sBAAK9C,UAAU,eAAf,UACE,2CACA,cAAC,EAAD,CAAMH,SAAUE,KAAK2B,oBACrB,0CACA,cAAC,EAAD,CAAQjC,MAAOM,KAAKb,MAAMuC,OAAQjB,SAAUT,KAAKoC,eACjD,cAAC,EAAD,CACErB,SAAUkC,EACVjC,gBAAiBhB,KAAKgB,yB,GAlEdL,aCJlBwC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BvE,EAAOC,QAAU,CAAC,YAAc,8BAA8B,OAAS,yBAAyB,OAAS,4B","file":"static/js/main.960b9050.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"filter_input__7AorM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__RWzlf\",\"input\":\"form_input__1VnAx\",\"button\":\"form_button__2aoy-\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './form.module.css';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const number = this.state.number;\r\n    this.props.onSubmit(this.state.name, number);\r\n\r\n    this.formReset();\r\n  };\r\n\r\n  formReset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.form}>\r\n        <label className={styles.input}>\r\n          Name\r\n          <input\r\n            value={this.state.name}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.input}>\r\n          Number\r\n          <input\r\n            value={this.state.number}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className={styles.button}>Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport styles from './contacts.module.css';\r\n\r\nconst phoneFormatter = require('phone-formatter');\r\n\r\nconst Contacts = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map(contact => (\r\n        <li className={styles.contactItem} key={contact.id}>\r\n          {contact.name}:\r\n          <span className={styles.number}>\r\n            {phoneFormatter.format(contact.number, 'NNN-NN-NN')}\r\n          </span>\r\n          <button\r\n            className={styles.button}\r\n            onClick={() => onDeleteContact(contact.id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n    }),\r\n  ).isRequired,\r\n  number: PropTypes.string,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport styles from './filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    Find contacts by name\r\n    <input\r\n      className={styles.input}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\n\r\nexport default Filter;\r\nFilter.defaultProps = {\r\n  value: '',\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Form from './Components/Form';\nimport Contacts from './Components/Contacts';\nimport Filter from './Components/Filter';\n\nimport './common.css';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsContacts = JSON.parse(contacts);\n    if (parsContacts) {\n      this.setState({ contacts: parsContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  formSubmitHandler = (contactName, ContactNumber) => {\n    const contact = {\n      name: contactName,\n      id: uuidv4(),\n      number: ContactNumber,\n    };\n\n    const normalizedName = contactName.toLowerCase();\n    if (\n      this.state.contacts.find(\n        contact => contact.name.toLowerCase() === normalizedName,\n      )\n    ) {\n      alert(`${contactName} is already in contacts`);\n      return;\n    }\n    this.setState(prevState => ({\n      contacts: [...prevState.contacts, contact],\n    }));\n  };\n\n  filterChange = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  onDeleteContact = id => {\n    const refreshContacts = this.state.contacts.filter(\n      contact => contact.id !== id,\n    );\n    this.setState({ contacts: refreshContacts });\n  };\n\n  render() {\n    const normalizedFilter = this.state.filter.toLocaleLowerCase();\n    const filteredContacts = this.state.contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normalizedFilter),\n    );\n\n    return (\n      <div className=\"containerApp\">\n        <h1>Phonebook</h1>\n        <Form onSubmit={this.formSubmitHandler} />\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} onChange={this.filterChange} />\n        <Contacts\n          contacts={filteredContacts}\n          onDeleteContact={this.onDeleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"contacts_contactItem__2lcSW\",\"number\":\"contacts_number__2fOur\",\"button\":\"contacts_button__2VO7E\"};"],"sourceRoot":""}